#ifndef COMMAND_INCLUDED
#define COMMAND_INCLUDED

#include "offense.h"
#include "defence.h"
#include "missile.h"
#include "bomber.h"
#include "target.h"

namespace Simu
{

	//////////////////////////////////////////
	// 命令的定义
	//////////////////////////////////////////
	
	typedef enum ReceiverType
	{
		CMD_RECVR_OFFENSE,	// 接收方为攻方
		CMD_RECVR_DEFENCE,	// 接收方为守方
		CMD_RECVR_MISSILE,	// 接收方为导弹
		CMD_RECVR_BOMBER,	// 接收方为轰炸机
		CMD_RECVR_TARGET,	// 接收方为守方军事目标
	} ReceiverType;	// 命令接收方

	class Command
	{
	public:
		Command(void* receiver, const ReceiverType type);
		virtual ~Command();
		virtual void* Execute() = 0;

	protected:
		void* m_Receiver_;	// 命令接收方
		ReceiverType m_Type_;	// 命令接收方类型
		
	};	// class Command

	// 
	typedef std::shared_ptr<Command> CommandHolder;

	//----------------------------------------------------------------------------
	//----------------------------------------------------------------------------
	//----------------------------------------------------------------------------
	//----------------------------------------------------------------------------
	//----------------------------------------------------------------------------
	//----------------------------------------------------------------------------
	//----------------------------------------------------------------------------
	//----------------------------------------------------------------------------
	//----------------------------------------------------------------------------
	//----------------------------------------------------------------------------
	//----------------------------------------------------------------------------
	//----------------------------------------------------------------------------
	//----------------------------------------------------------------------------

}	// namespace Simu

#endif	// COMMAND_INCLUDED
